#!/usr/bin/env bash

set -o errexit
set -o pipefail
set -o nounset
# set -o xtrace

COMMAND="${1:-"run_container"}"

USERNAME="${USER:-ubuntu}"

CONTAINER_IMG="rookie"
CONTAINER_NAME="rookie-dev"

PICO_REPO="git@github.com:wesfletch/rookie_pico.git"
PICO_REPO_PATH="./rookie_pico"


function handle_error()
{
    exit_code="${1:?}"
    error_msg="${2:-}"

    if [[ "${exit_code}" -eq 0 ]]; then
        return 0
    else
        echo "ERR: ${error_msg}"
        exit 1
    fi
}

function dont_run_in_container()
{
    if [[ -f "/.dockerenv" ]]; then
        echo "Don't run this script inside a docker container, man"
        return 1
    fi
}

function check_dependencies()
{
    dont_run_in_container; handle_error $?

    deps=(
        git
        vcstool
    )
}

function run_container()
{
    dont_run_in_container; handle_error $?

    args=(
        --name "${CONTAINER_NAME:?}"
        -it
        --rm
        --privileged
        --user "${UID}"
        --volume "${PWD}/workspace:/home/${USERNAME}/workspace"
        --volume "${PWD}/pico_interface:/home/${USERNAME}/pico_interface"
        --volume "${PWD}/rookie_pico:/home/${USERNAME}/rookie_pico"
        --volume /dev/bus/usb:/dev/bus/usb
        --workdir "/home/${USERNAME}/"
        --env "TERM=xterm-256color"
        --env "DISPLAY"
        --env "PICO_SDK_PATH=/home/${USERNAME}/rookie_pico/pico-sdk"
        --net=host
    )

    docker run "${args[@]}" "${CONTAINER_IMG:?}":latest

}

function build_container()
{
    dont_run_in_container; handle_error $?

    echo "--- Building ${CONTAINER_IMG:?} image ---"
    
    # Pull in our other repo dependencies
    if [[ ! -d "${PICO_REPO_PATH}" ]]; then
        git clone "${PICO_REPO}" --recurse-submodules
    fi

    args=(
        --tag "${CONTAINER_IMG:?}:latest"
        --build-arg USER="${USERNAME}"
        --build-arg UID="${UID}"
        -f docker/Dockerfile .
    )

    docker build "${args[@]}"
}


while [[ "${#}" -gt 0 ]]; do
    ARG="${1}"
    case "${ARG}" in
        # Verbs
        "build" | "build-container")
            COMMAND="build_container"
            ;;
        "run" | "run-container")
            COMMAND="run_container"
            ;;
        # Options
        "-i" | "--image")
            CONTAINER_IMG="${2}"
            shift
            ;;
        "-n" | "--name")
            CONTAINER_NAME="${2}"
            shift
            ;;
        "--dump" | "--dump-command")
            DUMP=1
            ;;
        # Default
        *)
            echo "What? ${ARG}"
            exit 1
    esac
    shift
done

"${COMMAND:?}"
