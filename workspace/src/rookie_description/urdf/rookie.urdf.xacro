<?xml version="1.0"?>
<robot name="rookie" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- Wheelbase: center to center distance between front and back wheels -->
    <xacro:property name="wheel_base" value="0.129" />
    <!-- Track width: center to center distance between left and right wheels -->
    <xacro:property name="track_width" value="0.204" />
    <!-- Ground clearance: distance from bottom of chassis to the ground -->
    <xacro:property name="ground_clearance" value="0.020" /> <!-- approximate -->

    <!-- Base dimensions -->
    <xacro:property name="base_length" value="0.226155" />
    <xacro:property name="base_width" value="0.147" />
    <xacro:property name="base_height" value="0.079" />
    <xacro:property name="base_mass" value="2" /> <!-- just a guess -->

    <!-- Critical dimensions of the wheels-->
    <xacro:property name="wheel_width" value="0.02032" />
    <xacro:property name="wheel_diameter" value="0.098425" /> <!-- == 3 7/8" -->
    <!-- wheel spacing: clearance between wheel and body -->
    <xacro:property name="wheel_spacing" value="0.00546" /> 
    <xacro:property name="wheel_mass" value="0.0992233" />

    <!-- Macros -->
    <xacro:include filename="$(find rookie_description)/urdf/macros.xacro" />

    <xacro:macro name="wheel_dimensions">
        <origin xyz="0 ${-1 * wheel_width / 2} 0" rpy="1.570796327 0 0"/>
        <geometry>
            <cylinder length="${wheel_width}" radius="${wheel_diameter / 2}" />
        </geometry>
    </xacro:macro>

    <xacro:macro name="wheel_joint" params="wheel_name mirror_x mirror_y">
        <parent link="base_link" />
        <child link="${wheel_name}" />
        <xacro:if value="${mirror_y == -1}">
            <xacro:property name="yaw" value="3.14159" />
        </xacro:if>
        <xacro:unless value="${mirror_y == -1}">
            <xacro:property name="yaw" value="0" />
        </xacro:unless>
        <origin
            xyz="${(wheel_base / 2) * mirror_x}
                 ${((track_width / 2) + wheel_spacing - (wheel_width / 2)) * mirror_y}
                 ${-(base_height / 2) - ground_clearance + (wheel_diameter / 2)}"
            rpy="0.0 0.0 ${yaw}"/>
    </xacro:macro>
    <!-- /Macros -->

    <link name="base_link">
        <visual>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
        </visual>
        <collision>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
        </collision>
        <xacro:box_inertia name="base_link" mass="2" width="${base_width}" height="${base_height}" length="${base_length}" />
    </link>


    <link name="front_left_wheel">
        <visual>
            <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0" />
            <geometry>
                <mesh filename="package://rookie_description/meshes/Banebots_T81_Wheel.dae"/>
            </geometry>
        </visual>
        <collision>
            <xacro:wheel_dimensions />
        </collision>
        <xacro:cylinder_inertia name="front_left_wheel" radius="${wheel_diameter / 2}" height="${wheel_width}" mass="${wheel_mass}" />
    </link>
    <joint name="front_left_wheel_joint" type="continuous">
        <xacro:wheel_joint wheel_name="front_left_wheel" mirror_x="1" mirror_y="1" />
    </joint>


    <link name="front_right_wheel">
        <visual>
            <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0" />
            <geometry>
                <mesh filename="package://rookie_description/meshes/Banebots_T81_Wheel.dae"/>
            </geometry>
        </visual>
        <collision>
            <xacro:wheel_dimensions />
        </collision>
        <xacro:cylinder_inertia name="front_right_wheel" radius="${wheel_diameter / 2}" height="${wheel_width}" mass="${wheel_mass}" />
    </link>
    <joint name="front_right_wheel_joint" type="continuous">
        <xacro:wheel_joint wheel_name="front_right_wheel" mirror_x="1" mirror_y="-1" />
    </joint>


    <link name="rear_left_wheel">
        <visual>
            <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0" />
            <geometry>
                <mesh filename="package://rookie_description/meshes/Banebots_T81_Wheel.dae"/>
            </geometry>
        </visual>
        <collision>
            <xacro:wheel_dimensions />
        </collision>
        <xacro:cylinder_inertia name="rear_left_wheel" radius="${wheel_diameter / 2}" height="${wheel_width}" mass="${wheel_mass}" />
    </link>
    <joint name="rear_left_wheel_joint" type="continuous">
        <xacro:wheel_joint wheel_name="rear_left_wheel" mirror_x="-1" mirror_y="1" />
    </joint>


    <link name="rear_right_wheel">
        <visual>
            <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0" />
            <geometry>
                <mesh filename="package://rookie_description/meshes/Banebots_T81_Wheel.dae"/>
            </geometry>
        </visual>
        <collision>
            <xacro:wheel_dimensions />
        </collision>
        <xacro:cylinder_inertia name="rear_right_wheel" radius="${wheel_diameter / 2}" height="${wheel_width}" mass="${wheel_mass}" />
    </link>
    <joint name="rear_right_wheel_joint" type="continuous">
        <xacro:wheel_joint wheel_name="rear_right_wheel" mirror_x="-1" mirror_y="-1" />
    </joint>


</robot>