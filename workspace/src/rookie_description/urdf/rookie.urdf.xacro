<?xml version="1.0"?>
<robot name="rookie" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- Wheelbase: center to center distance between front and back wheels -->
    <xacro:property name="wheel_base" value="0.129" />
    <!-- Track width: center to center distance between left and right wheels -->
    <!-- <xacro:property name="track_width" value="0.204" /> -->
    <!-- TODO: need to widen the robot (or make the wheel_base shorter) so that it can
         actually turn in place. -->
    <xacro:property name="track_width" value="${0.204 + .02}" />
    <!-- Ground clearance: distance from bottom of chassis to the ground -->
    <xacro:property name="ground_clearance" value="0.020" /> <!-- approximate -->

    <!-- Base dimensions -->
    <xacro:property name="base_length" value="0.226155" />
    <xacro:property name="base_width" value="0.147" />
    <xacro:property name="base_height" value="0.079" />
    <xacro:property name="base_mass" value="2" /> <!-- just a guess -->

    <!-- Critical dimensions of the wheels-->
    <xacro:property name="wheel_width" value="0.02032" />
    <xacro:property name="wheel_diameter" value="0.098425" /> <!-- == 3 7/8" -->
    <!-- clearance between wheel and body -->
    <xacro:property name="wheel_clearance" value="0.00546" /> 
    <xacro:property name="wheel_mass" value="0.0992233" />
    <!-- The spacing between left and right wheels, made complicated by the fact that within
         this URDF, the coordinates of the wheels start at the EDGE, not the CENTER;
         so, this is edge-to-edge distance, rather than center-to-center -->
    <xacro:property name="left_right_wheel_spacing" value="${track_width - (wheel_width * 2)}" />
 
    <!-- Motor params -->
    <xacro:property name="drive_motor_torque_kg_cm" value="5" />

    <!-- Rather than deal with whatever URDF/SDF package-finding weirdness Gazebo has going on,
         just get our mesh paths directly here so we can use them later.-->
    <xacro:property name="mesh_directory" value="$(find rookie_description)/meshes/" />

    <!-- Macros -->
    <xacro:include filename="$(find rookie_description)/urdf/macros.xacro" />

    <xacro:macro name="wheel_dimensions" params="mirror_y">
        <origin xyz="0 ${mirror_y * wheel_width / 2} 0" rpy="1.570796327 0 0"/>
        <geometry>
            <cylinder length="${wheel_width}" radius="${wheel_diameter / 2}" />
        </geometry>
    </xacro:macro>

    <xacro:macro name="wheel_joint" params="wheel_name mirror_x mirror_y">
        <parent link="base_link" />
        <child link="${wheel_name}" />
        <origin
            xyz="${(wheel_base / 2) * mirror_x}
                 ${((left_right_wheel_spacing / 2) + wheel_clearance - ((mirror_y * wheel_width) / 2)) * mirror_y}
                 ${-(base_height / 2) - ground_clearance + (wheel_diameter / 2)}"
            rpy="0.0 0.0 0.0"/>
        <axis xyz="0 1 0" />
    </xacro:macro>
    <!-- /Macros -->

    <link name="base_link">
        <visual>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
        </visual>
        <collision>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
        </collision>
        <xacro:box_inertia name="base_link" mass="2" width="${base_width}" height="${base_height}" length="${base_length}" />
    </link>


    <link name="front_left_wheel">
        <visual>
            <origin rpy="0.0 0.0 3.14159" xyz="0.0 0.0 0.0" />
            <geometry>
                <mesh filename="${mesh_directory}/Banebots_T81_Wheel.dae"/>
            </geometry>
        </visual>
        <collision>
            <xacro:wheel_dimensions mirror_y="-1" />
        </collision>
        <xacro:cylinder_inertia name="front_left_wheel" radius="${wheel_diameter / 2}" height="${wheel_width}" mass="${wheel_mass}" />
    </link>
    <joint name="front_left_wheel_joint" type="continuous">
        <xacro:wheel_joint wheel_name="front_left_wheel" mirror_x="1" mirror_y="1" />
    </joint>


    <link name="rear_left_wheel">
        <visual>
            <origin rpy="0.0 0.0 3.14159" xyz="0.0 0.0 0.0" />
            <geometry>
                <mesh filename="${mesh_directory}/Banebots_T81_Wheel.dae"/>
            </geometry>
        </visual>
        <collision>
            <xacro:wheel_dimensions mirror_y="-1" />
        </collision>
        <xacro:cylinder_inertia name="rear_left_wheel" radius="${wheel_diameter / 2}" height="${wheel_width}" mass="${wheel_mass}" />
    </link>
    <joint name="rear_left_wheel_joint" type="continuous">
        <xacro:wheel_joint wheel_name="rear_left_wheel" mirror_x="-1" mirror_y="1" />
    </joint>


    <link name="front_right_wheel">
        <visual>
            <origin rpy="0.0 0.0 3.14159" xyz="0.0 0.0 0.0" />
            <geometry>
                <mesh filename="${mesh_directory}/Banebots_T81_Wheel.dae"/>
            </geometry>
        </visual>
        <collision>
            <xacro:wheel_dimensions mirror_y="1"/>
        </collision>
        <xacro:cylinder_inertia name="front_right_wheel" radius="${wheel_diameter / 2}" height="${wheel_width}" mass="${wheel_mass}" />
    </link>
    <joint name="front_right_wheel_joint" type="continuous">
        <xacro:wheel_joint wheel_name="front_right_wheel" mirror_x="1" mirror_y="-1" />
    </joint>


    <link name="rear_right_wheel">
        <visual>
            <origin rpy="0.0 0.0 3.14159" xyz="0.0 0.0 0.0" />
            <geometry>
                <mesh filename="${mesh_directory}/Banebots_T81_Wheel.dae"/>
            </geometry>
        </visual>
        <collision>
            <xacro:wheel_dimensions mirror_y="1"/>
        </collision>
        <xacro:cylinder_inertia name="rear_right_wheel" radius="${wheel_diameter / 2}" height="${wheel_width}" mass="${wheel_mass}" />
    </link>
    <joint name="rear_right_wheel_joint" type="continuous">
        <xacro:wheel_joint wheel_name="rear_right_wheel" mirror_x="-1" mirror_y="-1" />
    </joint>

    <link name="lidar_slamtec_c1">
        <visual>
            <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0" />
            <geometry>
                <cylinder length="0.0413" radius="0.0278" />
            </geometry>
        </visual>
        <collision>
            <geometry>
                <cylinder length="0.0413" radius="0.0278" />
            </geometry>        
        </collision>
    </link>
    <joint name="lidar_joint" type="fixed">
        <parent link="base_link" />
        <child link="lidar_slamtec_c1" />
        <origin
            xyz="0 0 ${(base_height / 2) + (0.0413 / 2)}"
            rpy="0.0 0.0 0"/>
    </joint>

    <link name="camera">
        <static>true</static>
        <visual name='visual'>
            <geometry>
                <box size="0.01 0.05 0.01" />
            </geometry>
        </visual>
    </link>
    <joint name="camera_joint" type="fixed">
        <parent link="base_link" />
        <child link="camera" />
        <origin
            xyz="${base_length / 2} 0 0"
            rpy="0.0 0.0 0"/> 
    </joint>

    <link name="imu" type="fixed">
        <static>true</static>
        <visual name='visual'>
            <geometry>
                <box size="0.01 0.01 0.01" />
            </geometry>
        </visual>
    </link>
    <joint name="imu_joint" type="fixed">
        <parent link="base_link" />
        <child link="imu" />
        <origin
            xyz="0.0 0.0 0.0"
            rpy="0.0 0.0 0"/> 
    </joint>

    <!-- Gazebo-specific -->
    <xacro:include filename="$(find rookie_description)/urdf/rookie.gazebo.xacro" />

</robot>