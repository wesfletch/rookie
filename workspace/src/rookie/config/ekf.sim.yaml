# The config params for the SIMULATION-SPECIFIC EKF node, publishing odom->base_link.
# NOTE: this is basically the trivial case of an EKF node since our simulation output is perfect,
# unlike real-world sensor output, and so our EKF output cannot be better than what we
# already have. BUT, this is how the real robot will generate the transform, so here we are.
ekf_node:
    ros__parameters:
        frequency: 30.0
        two_d_mode: false
        publish_acceleration: true
        publish_tf: true

        map_frame: map
        odom_frame: odom
        base_link_frame: base_link
        
        # We're fusing continuous LOCAL data (IMU + encoders), so this EKF node will
        # be responsible for generation of odom->base_link.
        # (If we had discrete GLOBAL data like GPS updates, that would need
        # to be integrated in a SEPARATE EKF node, with world_frame==map)
        world_frame: odom

        # Odometry: We're in a simulation, so all of the odom information is
        # ground-truth accurate. No need to exclude things to deal with noise.
        odom0: /rookie/odom
        odom0_config: [
            true,   true,   true, # X, Y, Z
            true,   true,   true, # Roll, Pitch, Yaw
            true,   true,   true, # X', Y', Z'
            true,   true,   true,  # Roll', Pitch', Yaw'
            false,  false,  false  # X'', Y'', Z'' 
        ]

        # IMU: we're only keeping angular yaw accel (Yaw')
        imu0: /rookie/imu
        imu0_config: [
            false,  false,  false,
            true,   true,   true,
            false,  false,  false,
            false,  false,  false,
            true,   true,    true
        ]